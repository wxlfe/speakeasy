import{Workbox as _}from"workbox-window";if("undefined"!=typeof window&&"serviceWorker"in navigator&&"undefined"!=typeof caches){if(__PWA_START_URL__&&caches.has("start-url").then((_=>{_||caches.open("start-url").then((_=>_.put(__PWA_START_URL__,new Response("",{status:200}))))})),window.workbox=new _(window.location.origin+__PWA_SW__,{scope:__PWA_SCOPE__}),__PWA_START_URL__&&window.workbox.addEventListener("installed",(async({isUpdate:_})=>{if(!_){const _=await caches.open("start-url"),e=await fetch(__PWA_START_URL__);let t=e;e.redirected&&(t=new Response(e.body,{status:200,statusText:"OK",headers:e.headers})),await _.put(__PWA_START_URL__,t)}})),window.workbox.addEventListener("installed",(async()=>{const _=await caches.open("next-data");window.performance.getEntriesByType("resource").forEach((e=>{const t=e.name;t.startsWith(`${window.location.origin}/_next/data/`)&&t.endsWith(".json")&&_.add(t)}))})),__PWA_ENABLE_REGISTER__&&window.workbox.register(),__PWA_CACHE_ON_FRONT_END_NAV__||__PWA_START_URL__){const _=_=>{if(window.navigator.onLine&&_)return __PWA_CACHE_ON_FRONT_END_NAV__&&_!==__PWA_START_URL__?caches.open("others").then((e=>e.match(_,{ignoreSearch:!0}).then((t=>t?Promise.resolve():e.add(_))))):__PWA_START_URL__&&_===__PWA_START_URL__?fetch(__PWA_START_URL__).then((async _=>_.redirected?Promise.resolve():caches.open("start-url").then((e=>e.put(__PWA_START_URL__,_))))):void 0},e=history.pushState;history.pushState=(...t)=>{e.apply(history,t),_(t[2])};const t=history.replaceState;history.replaceState=(...e)=>{t.apply(history,e),_(e[2])},window.addEventListener("online",(()=>{_(window.location.pathname)}))}__PWA_RELOAD_ON_ONLINE__&&window.addEventListener("online",(()=>{location.reload()}))}