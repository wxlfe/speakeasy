import{CleanWebpackPlugin as e}from"clean-webpack-plugin";import t from"crypto";import o from"fast-glob";import i from"fs";import n from"path";import{fileURLToPath as s}from"url";import r from"workbox-webpack-plugin";import{createRequire as a}from"module";import l from"terser-webpack-plugin";import c from"webpack";var p={$schema:"https://json.schemastore.org/swcrc",module:{type:"es6",lazy:!0,noInterop:!0},jsc:{parser:{syntax:"typescript",tsx:!0,dynamicImport:!0,decorators:!1},transform:{react:{runtime:"automatic"}},target:"es2022",loose:!1},minify:!1};const m=e=>{Object.defineProperty(e,"alreadyCalled",{get:()=>!1,set(){}})},u=e=>void 0!==e&&"string"==typeof e.swSrc,d=(e,t)=>{for(const o of e){const e=t(o);if(e)return e}},f=a(import.meta.url),_=({id:t,baseDir:o,customWorkerDir:s,destDir:r,plugins:a,tsconfig:m,minify:u})=>{let d="";const _=n.join(o,s),g=n.join(o,"src",s);if(i.existsSync(_)?d=_:i.existsSync(g)&&(d=g),!d)return;const h=`worker-${t}.js`,A=["ts","js"].map((e=>n.join(d,`index.${e}`))).filter((e=>i.existsSync(e)));if(0===A.length)return;if(A.length>1)return void console.warn(`> [PWA] WARNING: More than one custom worker found (${A.join(",")}), a custom worker will not be built.`);const x=A[0];return console.log(`> [PWA] Custom worker found: ${x}`),console.log(`> [PWA] Building custom worker: ${n.join(r,h)}...`),m&&m.compilerOptions&&m.compilerOptions.paths&&((e,t,o)=>{e.jsc.baseUrl=t,e.jsc.paths=o})(p,n.join(o,m.compilerOptions.baseUrl??"."),m.compilerOptions.paths),c({mode:u?"production":"development",target:"webworker",entry:{main:x},resolve:{extensions:[".ts",".js"],fallback:{module:!1,dgram:!1,dns:!1,path:!1,fs:!1,os:!1,crypto:!1,stream:!1,http2:!1,net:!1,tls:!1,zlib:!1,child_process:!1}},resolveLoader:{alias:{"swc-loader":f.resolve("swc-loader")}},module:{rules:[{test:/\.(t|j)s$/i,use:[{loader:"swc-loader",options:p}]}]},output:{path:r,filename:h},plugins:[new e({cleanOnceBeforeBuildPatterns:[n.join(r,"worker-*.js"),n.join(r,"worker-*.js.map")]})].concat(a??[]),optimization:u?{minimize:!0,minimizer:[new l]}:void 0}).run(((e,t)=>{(e||t?.hasErrors())&&(console.error("> [PWA] Failed to build custom worker."),console.error(t?.toString({colors:!0})),process.exit(-1))})),h},g=s(new URL(".",import.meta.url)),h=a(import.meta.url),A=({id:t,fallbacks:o,destDir:i,minify:s})=>{const r=(({fallbacks:e,id:t})=>{let o=e.data;o&&o.endsWith(".json")&&(o=n.posix.join("/_next/data",t,o));const i={__PWA_FALLBACK_DOCUMENT__:e.document||!1,__PWA_FALLBACK_IMAGE__:e.image||!1,__PWA_FALLBACK_AUDIO__:e.audio||!1,__PWA_FALLBACK_VIDEO__:e.video||!1,__PWA_FALLBACK_FONT__:e.font||!1,__PWA_FALLBACK_DATA__:o||!1};if(0!==Object.values(i).filter((e=>!!e)).length)return console.log("> [PWA] This app will fallback to these precached routes when fetching from cache or network fails:"),i.__PWA_FALLBACK_DOCUMENT__&&console.log(`> [PWA]   Documents (pages): ${i.__PWA_FALLBACK_DOCUMENT__}`),i.__PWA_FALLBACK_IMAGE__&&console.log(`> [PWA]   Images: ${i.__PWA_FALLBACK_IMAGE__}`),i.__PWA_FALLBACK_AUDIO__&&console.log(`> [PWA]   Audio: ${i.__PWA_FALLBACK_AUDIO__}`),i.__PWA_FALLBACK_VIDEO__&&console.log(`> [PWA]   Videos: ${i.__PWA_FALLBACK_VIDEO__}`),i.__PWA_FALLBACK_FONT__&&console.log(`> [PWA]   Fonts: ${i.__PWA_FALLBACK_FONT__}`),i.__PWA_FALLBACK_DATA__&&console.log(`> [PWA]   Data (/_next/data/**/*.json): ${i.__PWA_FALLBACK_DATA__}`),i})({fallbacks:o,id:t});if(!r)return;const a=`fallback-${t}.js`,m=n.join(g,"fallback.js");return c({mode:s?"production":"development",target:"webworker",entry:{main:m},resolve:{extensions:[".js"],fallback:{module:!1,dgram:!1,dns:!1,path:!1,fs:!1,os:!1,crypto:!1,stream:!1,http2:!1,net:!1,tls:!1,zlib:!1,child_process:!1}},resolveLoader:{alias:{"swc-loader":h.resolve("swc-loader")}},module:{rules:[{test:/\.(t|j)s$/i,use:[{loader:"swc-loader",options:p}]}]},output:{path:i,filename:a},plugins:[new e({cleanOnceBeforeBuildPatterns:[n.join(i,"fallback-*.js"),n.join(i,"fallback-*.js.map")]}),new c.EnvironmentPlugin(r)],optimization:s?{minimize:!0,minimizer:[new l]}:void 0}).run(((e,t)=>{(e||t?.hasErrors())&&(console.error("> [PWA] Failed to build fallback worker."),console.error(t?.toString({colors:!0})),process.exit(-1))})),{name:a,precaches:Object.values(r).filter((e=>!!e))}},x=[{urlPattern:/^https:\/\/fonts\.(?:gstatic)\.com\/.*/i,handler:"CacheFirst",options:{cacheName:"google-fonts-webfonts",expiration:{maxEntries:4,maxAgeSeconds:31536e3}}},{urlPattern:/^https:\/\/fonts\.(?:googleapis)\.com\/.*/i,handler:"StaleWhileRevalidate",options:{cacheName:"google-fonts-stylesheets",expiration:{maxEntries:4,maxAgeSeconds:604800}}},{urlPattern:/\.(?:eot|otf|ttc|ttf|woff|woff2|font.css)$/i,handler:"StaleWhileRevalidate",options:{cacheName:"static-font-assets",expiration:{maxEntries:4,maxAgeSeconds:604800}}},{urlPattern:/\.(?:jpg|jpeg|gif|png|svg|ico|webp)$/i,handler:"StaleWhileRevalidate",options:{cacheName:"static-image-assets",expiration:{maxEntries:64,maxAgeSeconds:2592e3}}},{urlPattern:/\/_next\/image\?url=.+$/i,handler:"StaleWhileRevalidate",options:{cacheName:"next-image",expiration:{maxEntries:64,maxAgeSeconds:86400}}},{urlPattern:/\.(?:mp3|wav|ogg)$/i,handler:"CacheFirst",options:{rangeRequests:!0,cacheName:"static-audio-assets",expiration:{maxEntries:32,maxAgeSeconds:86400}}},{urlPattern:/\.(?:mp4)$/i,handler:"CacheFirst",options:{rangeRequests:!0,cacheName:"static-video-assets",expiration:{maxEntries:32,maxAgeSeconds:86400}}},{urlPattern:/\.(?:js)$/i,handler:"StaleWhileRevalidate",options:{cacheName:"static-js-assets",expiration:{maxEntries:48,maxAgeSeconds:86400}}},{urlPattern:/\.(?:css|less)$/i,handler:"StaleWhileRevalidate",options:{cacheName:"static-style-assets",expiration:{maxEntries:32,maxAgeSeconds:86400}}},{urlPattern:/\/_next\/data\/.+\/.+\.json$/i,handler:"StaleWhileRevalidate",options:{cacheName:"next-data",expiration:{maxEntries:32,maxAgeSeconds:86400}}},{urlPattern:/\.(?:json|xml|csv)$/i,handler:"NetworkFirst",options:{cacheName:"static-data-assets",expiration:{maxEntries:32,maxAgeSeconds:86400}}},{urlPattern:({sameOrigin:e,url:t})=>{if(!e)return!1;const o=t.pathname;return!o.startsWith("/api/auth/")&&!!o.startsWith("/api/")},handler:"NetworkFirst",method:"GET",options:{cacheName:"apis",expiration:{maxEntries:16,maxAgeSeconds:86400},networkTimeoutSeconds:10}},{urlPattern:({url:e,sameOrigin:t})=>{if(!t)return!1;return!e.pathname.startsWith("/api/")},handler:"NetworkFirst",options:{cacheName:"others",expiration:{maxEntries:32,maxAgeSeconds:86400}}},{urlPattern:({sameOrigin:e})=>!e,handler:"NetworkFirst",options:{cacheName:"cross-origin",expiration:{maxEntries:32,maxAgeSeconds:3600},networkTimeoutSeconds:10}}],w=s(new URL(".",import.meta.url)),j=(s={})=>(a={})=>({...a,...{webpack(l,c){const p=!!a.experimental?.appDir,f=c.webpack,{buildId:g,dev:h,config:{distDir:j=".next",pageExtensions:P=["tsx","ts","jsx","js","mdx"]}}=c;let b=c.config.basePath;b||(b="/");const W=((e,t)=>{try{const o=d([t??"tsconfig.json","jsconfig.json"],(t=>{const o=n.join(e,t);return i.existsSync(o)?o:void 0}));if(!o)return;return JSON.parse(i.readFileSync(o,"utf-8"))}catch{return}})(c.dir,a?.typescript?.tsconfigPath),{disable:y=!1,register:k=!0,dest:S=j,sw:v="sw.js",cacheStartUrl:E=!0,dynamicStartUrl:L=!0,dynamicStartUrlRedirect:$,publicExcludes:O=["!noprecache/**/*"],buildExcludes:N=[],fallbacks:C={},cacheOnFrontEndNav:F=!1,reloadOnOnline:D=!0,scope:B=b,customWorkerDir:R="worker",workboxOptions:T={}}=s,{swSrc:U,additionalManifestEntries:I,modifyURLPrefix:K={},manifestTransforms:M=[],exclude:z,...G}=T;"function"==typeof a.webpack&&(l=a.webpack(l,c)),Object.keys(G).forEach((e=>void 0===G[e]&&delete G[e]));let V=[],q=x;if(l.plugins||(l.plugins=[]),y)return c.isServer&&console.log("> [PWA] PWA support is disabled."),l;console.log(`> [PWA] Compiling for ${c.isServer?"server":"client (static)"}...`),(e=>!u(e))(T)&&(T.runtimeCaching&&(console.log("> [PWA] Custom runtimeCaching array found, using it instead of the default one."),q=T.runtimeCaching),T.importScripts&&(V=T.importScripts));const H=n.posix.join(B,"/"),J=n.posix.join(b,v.startsWith("/")?v:`/${v}`);l.plugins.push(new f.DefinePlugin({__PWA_SW__:`'${J}'`,__PWA_SCOPE__:`'${H}'`,__PWA_ENABLE_REGISTER__:`${Boolean(k)}`,__PWA_START_URL__:L?`'${b}'`:void 0,__PWA_CACHE_ON_FRONT_END_NAV__:`${Boolean(F)}`,__PWA_RELOAD_ON_ONLINE__:`${Boolean(D)}`}));const Y=n.join(w,"sw-entry.js"),Q=l.entry;if(l.entry=()=>Q().then((e=>(e["main.js"]&&!e["main.js"].includes(Y)&&(Array.isArray(e["main.js"])?e["main.js"].unshift(Y):"string"==typeof e["main.js"]&&(e["main.js"]=[Y,e["main.js"]])),e["main-app"]&&!e["main-app"].includes(Y)&&(Array.isArray(e["main-app"])?e["main-app"].unshift(Y):"string"==typeof e["main-app"]&&(e["main-app"]=[Y,e["main-app"]])),e))),!c.isServer){const s=n.join(c.dir,S),a=_({id:g,baseDir:c.dir,customWorkerDir:R,destDir:s,plugins:l.plugins.filter((e=>e instanceof f.DefinePlugin)),tsconfig:W,minify:!h});a&&V.unshift(a),k?console.log(`> [PWA] Service worker will be automatically registered with: ${n.resolve(Y)}`):(console.log("> [PWA] Service worker won't be automatically registered as per the config, please call the following code in a componentDidMount callback or useEffect hook:"),console.log("> [PWA]   window.workbox.register()"),W?.compilerOptions?.types?.includes("@ducanh2912/next-pwa/workbox")||console.log("> [PWA] You may also want to add @ducanh2912/next-pwa/workbox to compilerOptions.types in your tsconfig.json/jsconfig.json.")),console.log(`> [PWA] Service worker: ${n.join(s,v)}`),console.log(`> [PWA]   URL: ${J}`),console.log(`> [PWA]   Scope: ${H}`),l.plugins.push(new e({cleanOnceBeforeBuildPatterns:[n.join(s,"workbox-*.js"),n.join(s,"workbox-*.js.map"),n.join(s,v),n.join(s,`${v}.map`)]}));let x=I??[];x||(x=o.sync(["**/*","!workbox-*.js","!workbox-*.js.map","!worker-*.js","!worker-*.js.map","!fallback-*.js","!fallback-*.js.map",`!${v.replace(/^\/+/,"")}`,`!${v.replace(/^\/+/,"")}.map`,...O],{cwd:"public"}).map((e=>{return{url:n.posix.join(b,`/${e}`),revision:(o=`public/${e}`,t.createHash("md5").update(i.readFileSync(o)).digest("hex"))};var o}))),E&&(L?"string"==typeof $&&$.length>0&&x.push({url:$,revision:g}):x.push({url:b,revision:g}));let w=!1;if(C){C.document||(C.document=((e,t,o)=>{const s=d(["pages","src/pages"],(t=>(t=n.join(e,t),i.existsSync(t)?t:void 0))),r=o?d(["app","src/app"],(t=>(t=n.join(e,t),i.existsSync(t)?t:void 0))):void 0;if(s||r)for(const e of t){if(r){const t=n.join(r,`~offline/page.${e}`);if(i.existsSync(t))return"/~offline";const o=n.join(r,`_offline/page.${e}`);if(i.existsSync(o))return console.warn('> [PWA] Next.js App Router now ignores folders prefixed by underscore (_). Please replace "/_offline" with "/~offline". "/_offline" in "app/" will no longer automatically enable the fallback worker in the next major version.'),"/_offline"}if(s){const t=n.join(s,`_offline.${e}`);if(t&&i.existsSync(t))return"/_offline"}}})(c.dir,P,p));const e=A({id:g,fallbacks:C,baseDir:c.dir,destDir:s,minify:!h,pageExtensions:P,isAppDirEnabled:p});e&&(w=!0,V.unshift(e.name),e.precaches.forEach((e=>{e&&"boolean"!=typeof e&&!x.find((t=>"string"!=typeof t&&t.url.startsWith(e)))&&x.push({url:e,revision:g})})))}const j={swDest:n.join(s,v),additionalManifestEntries:h?[]:x,exclude:[...N,({asset:e})=>!(!e.name.startsWith("server/")&&!e.name.match(/^((app-|^)build-manifest\.json|react-loadable-manifest\.json)$/))||!(!h||e.name.startsWith("static/runtime/"))],modifyURLPrefix:{...K,"/_next/../public/":"/"},manifestTransforms:[...M,async(e,t)=>({manifest:e.map((e=>{if(e.url=e.url.replace("/_next//static/image","/_next/static/image"),e.url=e.url.replace("/_next//static/media","/_next/static/media"),null===e.revision){let o=e.url;l.output&&l.output.publicPath&&"string"==typeof l.output.publicPath&&o.startsWith(l.output.publicPath)&&(o=e.url.substring(l.output.publicPath.length));const i=t.assetsInfo.get(o);e.revision=i&&i.contenthash||g}return e.url=e.url.replace(/\[/g,"%5B").replace(/\]/g,"%5D"),e})),warnings:[]})]};if(u(T)){const e=n.join(c.dir,T.swSrc);console.log(`> [PWA] Using InjectManifest with ${e}`);const t=new r.InjectManifest({...j,...G,swSrc:e});h&&m(t),l.plugins.push(t)}else{const{skipWaiting:e=!0,clientsClaim:t=!0,cleanupOutdatedCaches:o=!0,ignoreURLParametersMatching:i=[]}=T;let n=!1;h&&(console.log("> [PWA] Building in development mode, caching and precaching are disabled for the most part. This means that offline support is disabled, but you can continue developing other functions in service worker."),i.push(/ts/),q=[{urlPattern:/.*/i,handler:"NetworkOnly",options:{cacheName:"dev"}}],n=!0),L&&q.unshift({urlPattern:b,handler:"NetworkFirst",options:{cacheName:"start-url",plugins:[{cacheWillUpdate:async({response:e})=>e&&"opaqueredirect"===e.type?new Response(e.body,{status:200,statusText:"OK",headers:e.headers}):e}]}}),w&&q.forEach((e=>{e.options&&(e.options.precacheFallback||Array.isArray(e.options.plugins)&&e.options.plugins.find((e=>"handlerDidError"in e))||(e.options.plugins||(e.options.plugins=[]),e.options.plugins.push({handlerDidError:async({request:e})=>"undefined"!=typeof self?self.fallback(e):Response.error()})))}));const s=new r.GenerateSW({...j,skipWaiting:e,clientsClaim:t,cleanupOutdatedCaches:o,ignoreURLParametersMatching:i,importScripts:V,...G,runtimeCaching:q});n&&m(s),l.plugins.push(s)}}return l}}});export{j as default,x as runtimeCaching};